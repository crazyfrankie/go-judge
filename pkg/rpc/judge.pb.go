// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: pkg/rpc/proto/judge.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Language int32

const (
	Language_go     Language = 0
	Language_java   Language = 1
	Language_cpp    Language = 2
	Language_python Language = 3
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0: "go",
		1: "java",
		2: "cpp",
		3: "python",
	}
	Language_value = map[string]int32{
		"go":     0,
		"java":   1,
		"cpp":    2,
		"python": 3,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_rpc_proto_judge_proto_enumTypes[0].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_pkg_rpc_proto_judge_proto_enumTypes[0]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_judge_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_status_accepted              Status = 0
	Status_status_wrong_answer          Status = 1
	Status_status_time_limit_exceeded   Status = 2
	Status_status_memory_limit_exceeded Status = 3
	Status_status_runtime_error         Status = 4
	Status_status_compilation_error     Status = 5
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "status_accepted",
		1: "status_wrong_answer",
		2: "status_time_limit_exceeded",
		3: "status_memory_limit_exceeded",
		4: "status_runtime_error",
		5: "status_compilation_error",
	}
	Status_value = map[string]int32{
		"status_accepted":              0,
		"status_wrong_answer":          1,
		"status_time_limit_exceeded":   2,
		"status_memory_limit_exceeded": 3,
		"status_runtime_error":         4,
		"status_compilation_error":     5,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_rpc_proto_judge_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_pkg_rpc_proto_judge_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_judge_proto_rawDescGZIP(), []int{1}
}

type JudgeRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Language       Language               `protobuf:"varint,1,opt,name=language,proto3,enum=rpc.Language" json:"language,omitempty"`
	ProblemId      int64                  `protobuf:"varint,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Uid            int64                  `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Code           string                 `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	FullTemplate   string                 `protobuf:"bytes,5,opt,name=full_template,json=fullTemplate,proto3" json:"full_template,omitempty"`
	TypeDefinition string                 `protobuf:"bytes,6,opt,name=type_definition,json=typeDefinition,proto3" json:"type_definition,omitempty"`
	Input          []string               `protobuf:"bytes,7,rep,name=input,proto3" json:"input,omitempty"`
	Output         []string               `protobuf:"bytes,8,rep,name=output,proto3" json:"output,omitempty"`
	MaxMem         string                 `protobuf:"bytes,9,opt,name=max_mem,json=maxMem,proto3" json:"max_mem,omitempty"`     // MB
	MaxTime        string                 `protobuf:"bytes,10,opt,name=max_time,json=maxTime,proto3" json:"max_time,omitempty"` // ms
	Workdir        string                 `protobuf:"bytes,11,opt,name=workdir,proto3" json:"workdir,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *JudgeRequest) Reset() {
	*x = JudgeRequest{}
	mi := &file_pkg_rpc_proto_judge_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JudgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeRequest) ProtoMessage() {}

func (x *JudgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_proto_judge_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeRequest.ProtoReflect.Descriptor instead.
func (*JudgeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_judge_proto_rawDescGZIP(), []int{0}
}

func (x *JudgeRequest) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_go
}

func (x *JudgeRequest) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *JudgeRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *JudgeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *JudgeRequest) GetFullTemplate() string {
	if x != nil {
		return x.FullTemplate
	}
	return ""
}

func (x *JudgeRequest) GetTypeDefinition() string {
	if x != nil {
		return x.TypeDefinition
	}
	return ""
}

func (x *JudgeRequest) GetInput() []string {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *JudgeRequest) GetOutput() []string {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *JudgeRequest) GetMaxMem() string {
	if x != nil {
		return x.MaxMem
	}
	return ""
}

func (x *JudgeRequest) GetMaxTime() string {
	if x != nil {
		return x.MaxTime
	}
	return ""
}

func (x *JudgeRequest) GetWorkdir() string {
	if x != nil {
		return x.Workdir
	}
	return ""
}

// 简化的判题响应，类似LeetCode风格
type JudgeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 如果全部通过，返回最优结果；如果有错误，返回错误结果
	Result *Result `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// 总体统计信息
	Overall       *OverallStatistics `protobuf:"bytes,2,opt,name=overall,proto3" json:"overall,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JudgeResponse) Reset() {
	*x = JudgeResponse{}
	mi := &file_pkg_rpc_proto_judge_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JudgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeResponse) ProtoMessage() {}

func (x *JudgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_proto_judge_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeResponse.ProtoReflect.Descriptor instead.
func (*JudgeResponse) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_judge_proto_rawDescGZIP(), []int{1}
}

func (x *JudgeResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *JudgeResponse) GetOverall() *OverallStatistics {
	if x != nil {
		return x.Overall
	}
	return nil
}

// 最优结果或错误结果
type Result struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Status         Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=rpc.Status" json:"status,omitempty"`
	TimeUsed       int64                  `protobuf:"varint,2,opt,name=time_used,json=timeUsed,proto3" json:"time_used,omitempty"`                  // 执行时间（毫秒）
	MemoryUsed     int64                  `protobuf:"varint,3,opt,name=memory_used,json=memoryUsed,proto3" json:"memory_used,omitempty"`            // 内存使用（字节）
	Output         string                 `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`                                       // 实际输出（错误时显示）
	ExpectedOutput string                 `protobuf:"bytes,5,opt,name=expected_output,json=expectedOutput,proto3" json:"expected_output,omitempty"` // 期望输出（错误时显示）
	// 格式化显示信息
	StatusRuntime string `protobuf:"bytes,6,opt,name=status_runtime,json=statusRuntime,proto3" json:"status_runtime,omitempty"` // "0 ms" 或 "150 ms"
	StatusMemory  string `protobuf:"bytes,7,opt,name=status_memory,json=statusMemory,proto3" json:"status_memory,omitempty"`    // "3.4 MB"
	StatusMsg     string `protobuf:"bytes,8,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`             // "Accepted", "Wrong Answer"
	// 性能百分位（仅AC时有意义）
	RuntimePercentile uint32 `protobuf:"varint,9,opt,name=runtime_percentile,json=runtimePercentile,proto3" json:"runtime_percentile,omitempty"` // 运行时间百分位 (0-100)
	MemoryPercentile  uint32 `protobuf:"varint,10,opt,name=memory_percentile,json=memoryPercentile,proto3" json:"memory_percentile,omitempty"`   // 内存百分位 (0-100)
	// 错误信息（仅错误时填充）
	ErrorMessage        string `protobuf:"bytes,11,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                         // 详细错误信息
	TestcaseInput       string `protobuf:"bytes,12,opt,name=testcase_input,json=testcaseInput,proto3" json:"testcase_input,omitempty"`                      // 失败的测试用例输入
	FailedTestcaseIndex int32  `protobuf:"varint,13,opt,name=failed_testcase_index,json=failedTestcaseIndex,proto3" json:"failed_testcase_index,omitempty"` // 失败的测试用例索引（从0开始）
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_pkg_rpc_proto_judge_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_proto_judge_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_judge_proto_rawDescGZIP(), []int{2}
}

func (x *Result) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_status_accepted
}

func (x *Result) GetTimeUsed() int64 {
	if x != nil {
		return x.TimeUsed
	}
	return 0
}

func (x *Result) GetMemoryUsed() int64 {
	if x != nil {
		return x.MemoryUsed
	}
	return 0
}

func (x *Result) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *Result) GetExpectedOutput() string {
	if x != nil {
		return x.ExpectedOutput
	}
	return ""
}

func (x *Result) GetStatusRuntime() string {
	if x != nil {
		return x.StatusRuntime
	}
	return ""
}

func (x *Result) GetStatusMemory() string {
	if x != nil {
		return x.StatusMemory
	}
	return ""
}

func (x *Result) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *Result) GetRuntimePercentile() uint32 {
	if x != nil {
		return x.RuntimePercentile
	}
	return 0
}

func (x *Result) GetMemoryPercentile() uint32 {
	if x != nil {
		return x.MemoryPercentile
	}
	return 0
}

func (x *Result) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *Result) GetTestcaseInput() string {
	if x != nil {
		return x.TestcaseInput
	}
	return ""
}

func (x *Result) GetFailedTestcaseIndex() int32 {
	if x != nil {
		return x.FailedTestcaseIndex
	}
	return 0
}

// 总体统计信息
type OverallStatistics struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TotalTestcases uint32                 `protobuf:"varint,1,opt,name=total_testcases,json=totalTestcases,proto3" json:"total_testcases,omitempty"` // 总测试用例数
	TotalCorrect   uint32                 `protobuf:"varint,2,opt,name=total_correct,json=totalCorrect,proto3" json:"total_correct,omitempty"`       // 通过的测试用例数
	CompareResult  string                 `protobuf:"bytes,3,opt,name=compare_result,json=compareResult,proto3" json:"compare_result,omitempty"`     // 测试结果："1111..." 或 "110X"（X表示在此失败）
	// 时间和内存统计（仅全部AC时有效）
	TotalTime int64 `protobuf:"varint,4,opt,name=total_time,json=totalTime,proto3" json:"total_time,omitempty"` // 总执行时间（毫秒）
	MaxMemory int64 `protobuf:"varint,5,opt,name=max_memory,json=maxMemory,proto3" json:"max_memory,omitempty"` // 最大内存使用（字节）
	AvgMemory int64 `protobuf:"varint,6,opt,name=avg_memory,json=avgMemory,proto3" json:"avg_memory,omitempty"` // 平均内存使用（字节）
	// 元数据
	FinalStatus    Status `protobuf:"varint,7,opt,name=final_status,json=finalStatus,proto3,enum=rpc.Status" json:"final_status,omitempty"` // 最终状态
	SubmissionId   string `protobuf:"bytes,8,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`               // 提交ID
	TaskFinishTime uint64 `protobuf:"varint,9,opt,name=task_finish_time,json=taskFinishTime,proto3" json:"task_finish_time,omitempty"`      // 完成时间戳
	Finished       bool   `protobuf:"varint,10,opt,name=finished,proto3" json:"finished,omitempty"`                                         // 是否完成
	// 整体性能百分位（基于最优结果）
	OverallRuntimePercentile uint32 `protobuf:"varint,11,opt,name=overall_runtime_percentile,json=overallRuntimePercentile,proto3" json:"overall_runtime_percentile,omitempty"` // 整体运行时间百分位
	OverallMemoryPercentile  uint32 `protobuf:"varint,12,opt,name=overall_memory_percentile,json=overallMemoryPercentile,proto3" json:"overall_memory_percentile,omitempty"`    // 整体内存百分位
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *OverallStatistics) Reset() {
	*x = OverallStatistics{}
	mi := &file_pkg_rpc_proto_judge_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OverallStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverallStatistics) ProtoMessage() {}

func (x *OverallStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_proto_judge_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverallStatistics.ProtoReflect.Descriptor instead.
func (*OverallStatistics) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_judge_proto_rawDescGZIP(), []int{3}
}

func (x *OverallStatistics) GetTotalTestcases() uint32 {
	if x != nil {
		return x.TotalTestcases
	}
	return 0
}

func (x *OverallStatistics) GetTotalCorrect() uint32 {
	if x != nil {
		return x.TotalCorrect
	}
	return 0
}

func (x *OverallStatistics) GetCompareResult() string {
	if x != nil {
		return x.CompareResult
	}
	return ""
}

func (x *OverallStatistics) GetTotalTime() int64 {
	if x != nil {
		return x.TotalTime
	}
	return 0
}

func (x *OverallStatistics) GetMaxMemory() int64 {
	if x != nil {
		return x.MaxMemory
	}
	return 0
}

func (x *OverallStatistics) GetAvgMemory() int64 {
	if x != nil {
		return x.AvgMemory
	}
	return 0
}

func (x *OverallStatistics) GetFinalStatus() Status {
	if x != nil {
		return x.FinalStatus
	}
	return Status_status_accepted
}

func (x *OverallStatistics) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *OverallStatistics) GetTaskFinishTime() uint64 {
	if x != nil {
		return x.TaskFinishTime
	}
	return 0
}

func (x *OverallStatistics) GetFinished() bool {
	if x != nil {
		return x.Finished
	}
	return false
}

func (x *OverallStatistics) GetOverallRuntimePercentile() uint32 {
	if x != nil {
		return x.OverallRuntimePercentile
	}
	return 0
}

func (x *OverallStatistics) GetOverallMemoryPercentile() uint32 {
	if x != nil {
		return x.OverallMemoryPercentile
	}
	return 0
}

var File_pkg_rpc_proto_judge_proto protoreflect.FileDescriptor

const file_pkg_rpc_proto_judge_proto_rawDesc = "" +
	"\n" +
	"\x19pkg/rpc/proto/judge.proto\x12\x03rpc\"\xc8\x02\n" +
	"\fJudgeRequest\x12)\n" +
	"\blanguage\x18\x01 \x01(\x0e2\r.rpc.LanguageR\blanguage\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x02 \x01(\x03R\tproblemId\x12\x10\n" +
	"\x03uid\x18\x03 \x01(\x03R\x03uid\x12\x12\n" +
	"\x04code\x18\x04 \x01(\tR\x04code\x12#\n" +
	"\rfull_template\x18\x05 \x01(\tR\ffullTemplate\x12'\n" +
	"\x0ftype_definition\x18\x06 \x01(\tR\x0etypeDefinition\x12\x14\n" +
	"\x05input\x18\a \x03(\tR\x05input\x12\x16\n" +
	"\x06output\x18\b \x03(\tR\x06output\x12\x17\n" +
	"\amax_mem\x18\t \x01(\tR\x06maxMem\x12\x19\n" +
	"\bmax_time\x18\n" +
	" \x01(\tR\amaxTime\x12\x18\n" +
	"\aworkdir\x18\v \x01(\tR\aworkdir\"f\n" +
	"\rJudgeResponse\x12#\n" +
	"\x06result\x18\x01 \x01(\v2\v.rpc.ResultR\x06result\x120\n" +
	"\aoverall\x18\x02 \x01(\v2\x16.rpc.OverallStatisticsR\aoverall\"\xf3\x03\n" +
	"\x06Result\x12#\n" +
	"\x06status\x18\x01 \x01(\x0e2\v.rpc.StatusR\x06status\x12\x1b\n" +
	"\ttime_used\x18\x02 \x01(\x03R\btimeUsed\x12\x1f\n" +
	"\vmemory_used\x18\x03 \x01(\x03R\n" +
	"memoryUsed\x12\x16\n" +
	"\x06output\x18\x04 \x01(\tR\x06output\x12'\n" +
	"\x0fexpected_output\x18\x05 \x01(\tR\x0eexpectedOutput\x12%\n" +
	"\x0estatus_runtime\x18\x06 \x01(\tR\rstatusRuntime\x12#\n" +
	"\rstatus_memory\x18\a \x01(\tR\fstatusMemory\x12\x1d\n" +
	"\n" +
	"status_msg\x18\b \x01(\tR\tstatusMsg\x12-\n" +
	"\x12runtime_percentile\x18\t \x01(\rR\x11runtimePercentile\x12+\n" +
	"\x11memory_percentile\x18\n" +
	" \x01(\rR\x10memoryPercentile\x12#\n" +
	"\rerror_message\x18\v \x01(\tR\ferrorMessage\x12%\n" +
	"\x0etestcase_input\x18\f \x01(\tR\rtestcaseInput\x122\n" +
	"\x15failed_testcase_index\x18\r \x01(\x05R\x13failedTestcaseIndex\"\xfa\x03\n" +
	"\x11OverallStatistics\x12'\n" +
	"\x0ftotal_testcases\x18\x01 \x01(\rR\x0etotalTestcases\x12#\n" +
	"\rtotal_correct\x18\x02 \x01(\rR\ftotalCorrect\x12%\n" +
	"\x0ecompare_result\x18\x03 \x01(\tR\rcompareResult\x12\x1d\n" +
	"\n" +
	"total_time\x18\x04 \x01(\x03R\ttotalTime\x12\x1d\n" +
	"\n" +
	"max_memory\x18\x05 \x01(\x03R\tmaxMemory\x12\x1d\n" +
	"\n" +
	"avg_memory\x18\x06 \x01(\x03R\tavgMemory\x12.\n" +
	"\ffinal_status\x18\a \x01(\x0e2\v.rpc.StatusR\vfinalStatus\x12#\n" +
	"\rsubmission_id\x18\b \x01(\tR\fsubmissionId\x12(\n" +
	"\x10task_finish_time\x18\t \x01(\x04R\x0etaskFinishTime\x12\x1a\n" +
	"\bfinished\x18\n" +
	" \x01(\bR\bfinished\x12<\n" +
	"\x1aoverall_runtime_percentile\x18\v \x01(\rR\x18overallRuntimePercentile\x12:\n" +
	"\x19overall_memory_percentile\x18\f \x01(\rR\x17overallMemoryPercentile*1\n" +
	"\bLanguage\x12\x06\n" +
	"\x02go\x10\x00\x12\b\n" +
	"\x04java\x10\x01\x12\a\n" +
	"\x03cpp\x10\x02\x12\n" +
	"\n" +
	"\x06python\x10\x03*\xb0\x01\n" +
	"\x06Status\x12\x13\n" +
	"\x0fstatus_accepted\x10\x00\x12\x17\n" +
	"\x13status_wrong_answer\x10\x01\x12\x1e\n" +
	"\x1astatus_time_limit_exceeded\x10\x02\x12 \n" +
	"\x1cstatus_memory_limit_exceeded\x10\x03\x12\x18\n" +
	"\x14status_runtime_error\x10\x04\x12\x1c\n" +
	"\x18status_compilation_error\x10\x052>\n" +
	"\fJudgeService\x12.\n" +
	"\x05Judge\x12\x11.rpc.JudgeRequest\x1a\x12.rpc.JudgeResponseB\x06Z\x04/rpcb\x06proto3"

var (
	file_pkg_rpc_proto_judge_proto_rawDescOnce sync.Once
	file_pkg_rpc_proto_judge_proto_rawDescData []byte
)

func file_pkg_rpc_proto_judge_proto_rawDescGZIP() []byte {
	file_pkg_rpc_proto_judge_proto_rawDescOnce.Do(func() {
		file_pkg_rpc_proto_judge_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_rpc_proto_judge_proto_rawDesc), len(file_pkg_rpc_proto_judge_proto_rawDesc)))
	})
	return file_pkg_rpc_proto_judge_proto_rawDescData
}

var file_pkg_rpc_proto_judge_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pkg_rpc_proto_judge_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pkg_rpc_proto_judge_proto_goTypes = []any{
	(Language)(0),             // 0: rpc.Language
	(Status)(0),               // 1: rpc.Status
	(*JudgeRequest)(nil),      // 2: rpc.JudgeRequest
	(*JudgeResponse)(nil),     // 3: rpc.JudgeResponse
	(*Result)(nil),            // 4: rpc.Result
	(*OverallStatistics)(nil), // 5: rpc.OverallStatistics
}
var file_pkg_rpc_proto_judge_proto_depIdxs = []int32{
	0, // 0: rpc.JudgeRequest.language:type_name -> rpc.Language
	4, // 1: rpc.JudgeResponse.result:type_name -> rpc.Result
	5, // 2: rpc.JudgeResponse.overall:type_name -> rpc.OverallStatistics
	1, // 3: rpc.Result.status:type_name -> rpc.Status
	1, // 4: rpc.OverallStatistics.final_status:type_name -> rpc.Status
	2, // 5: rpc.JudgeService.Judge:input_type -> rpc.JudgeRequest
	3, // 6: rpc.JudgeService.Judge:output_type -> rpc.JudgeResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_pkg_rpc_proto_judge_proto_init() }
func file_pkg_rpc_proto_judge_proto_init() {
	if File_pkg_rpc_proto_judge_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_rpc_proto_judge_proto_rawDesc), len(file_pkg_rpc_proto_judge_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_rpc_proto_judge_proto_goTypes,
		DependencyIndexes: file_pkg_rpc_proto_judge_proto_depIdxs,
		EnumInfos:         file_pkg_rpc_proto_judge_proto_enumTypes,
		MessageInfos:      file_pkg_rpc_proto_judge_proto_msgTypes,
	}.Build()
	File_pkg_rpc_proto_judge_proto = out.File
	file_pkg_rpc_proto_judge_proto_goTypes = nil
	file_pkg_rpc_proto_judge_proto_depIdxs = nil
}
