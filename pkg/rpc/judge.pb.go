// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: pkg/rpc/proto/judge.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Language int32

const (
	Language_go     Language = 0
	Language_java   Language = 1
	Language_cpp    Language = 2
	Language_python Language = 3
)

// Enum value maps for Language.
var (
	Language_name = map[int32]string{
		0: "go",
		1: "java",
		2: "cpp",
		3: "python",
	}
	Language_value = map[string]int32{
		"go":     0,
		"java":   1,
		"cpp":    2,
		"python": 3,
	}
)

func (x Language) Enum() *Language {
	p := new(Language)
	*p = x
	return p
}

func (x Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Language) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_rpc_proto_judge_proto_enumTypes[0].Descriptor()
}

func (Language) Type() protoreflect.EnumType {
	return &file_pkg_rpc_proto_judge_proto_enumTypes[0]
}

func (x Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Language.Descriptor instead.
func (Language) EnumDescriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_judge_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_status_accepted              Status = 0
	Status_status_wrong_answer          Status = 1
	Status_status_time_limit_exceeded   Status = 2
	Status_status_memory_limit_exceeded Status = 3
	Status_status_runtime_error         Status = 4
	Status_status_compilation_error     Status = 5
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "status_accepted",
		1: "status_wrong_answer",
		2: "status_time_limit_exceeded",
		3: "status_memory_limit_exceeded",
		4: "status_runtime_error",
		5: "status_compilation_error",
	}
	Status_value = map[string]int32{
		"status_accepted":              0,
		"status_wrong_answer":          1,
		"status_time_limit_exceeded":   2,
		"status_memory_limit_exceeded": 3,
		"status_runtime_error":         4,
		"status_compilation_error":     5,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_rpc_proto_judge_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_pkg_rpc_proto_judge_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_judge_proto_rawDescGZIP(), []int{1}
}

type JudgeRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Language       Language               `protobuf:"varint,1,opt,name=language,proto3,enum=rpc.Language" json:"language,omitempty"`
	ProblemId      int64                  `protobuf:"varint,2,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Uid            int64                  `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	Code           string                 `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	FullTemplate   string                 `protobuf:"bytes,5,opt,name=full_template,json=fullTemplate,proto3" json:"full_template,omitempty"`
	TypeDefinition string                 `protobuf:"bytes,6,opt,name=type_definition,json=typeDefinition,proto3" json:"type_definition,omitempty"`
	Input          []string               `protobuf:"bytes,7,rep,name=input,proto3" json:"input,omitempty"`
	Output         []string               `protobuf:"bytes,8,rep,name=output,proto3" json:"output,omitempty"`
	MaxMem         string                 `protobuf:"bytes,9,opt,name=max_mem,json=maxMem,proto3" json:"max_mem,omitempty"`
	MaxTime        string                 `protobuf:"bytes,10,opt,name=max_time,json=maxTime,proto3" json:"max_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *JudgeRequest) Reset() {
	*x = JudgeRequest{}
	mi := &file_pkg_rpc_proto_judge_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JudgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeRequest) ProtoMessage() {}

func (x *JudgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_proto_judge_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeRequest.ProtoReflect.Descriptor instead.
func (*JudgeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_judge_proto_rawDescGZIP(), []int{0}
}

func (x *JudgeRequest) GetLanguage() Language {
	if x != nil {
		return x.Language
	}
	return Language_go
}

func (x *JudgeRequest) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *JudgeRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *JudgeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *JudgeRequest) GetFullTemplate() string {
	if x != nil {
		return x.FullTemplate
	}
	return ""
}

func (x *JudgeRequest) GetTypeDefinition() string {
	if x != nil {
		return x.TypeDefinition
	}
	return ""
}

func (x *JudgeRequest) GetInput() []string {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *JudgeRequest) GetOutput() []string {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *JudgeRequest) GetMaxMem() string {
	if x != nil {
		return x.MaxMem
	}
	return ""
}

func (x *JudgeRequest) GetMaxTime() string {
	if x != nil {
		return x.MaxTime
	}
	return ""
}

type JudgeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*Result              `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JudgeResponse) Reset() {
	*x = JudgeResponse{}
	mi := &file_pkg_rpc_proto_judge_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JudgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeResponse) ProtoMessage() {}

func (x *JudgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_proto_judge_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeResponse.ProtoReflect.Descriptor instead.
func (*JudgeResponse) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_judge_proto_rawDescGZIP(), []int{1}
}

func (x *JudgeResponse) GetResults() []*Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type Result struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Status         Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=rpc.Status" json:"status,omitempty"`
	TimeUsed       int64                  `protobuf:"varint,2,opt,name=TimeUsed,proto3" json:"TimeUsed,omitempty"`
	MemoryUsed     int64                  `protobuf:"varint,3,opt,name=MemoryUsed,proto3" json:"MemoryUsed,omitempty"` //in bytes
	Output         string                 `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	ExpectedOutput string                 `protobuf:"bytes,5,opt,name=expected_output,json=expectedOutput,proto3" json:"expected_output,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_pkg_rpc_proto_judge_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_proto_judge_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_proto_judge_proto_rawDescGZIP(), []int{2}
}

func (x *Result) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_status_accepted
}

func (x *Result) GetTimeUsed() int64 {
	if x != nil {
		return x.TimeUsed
	}
	return 0
}

func (x *Result) GetMemoryUsed() int64 {
	if x != nil {
		return x.MemoryUsed
	}
	return 0
}

func (x *Result) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *Result) GetExpectedOutput() string {
	if x != nil {
		return x.ExpectedOutput
	}
	return ""
}

var File_pkg_rpc_proto_judge_proto protoreflect.FileDescriptor

const file_pkg_rpc_proto_judge_proto_rawDesc = "" +
	"\n" +
	"\x19pkg/rpc/proto/judge.proto\x12\x03rpc\"\xae\x02\n" +
	"\fJudgeRequest\x12)\n" +
	"\blanguage\x18\x01 \x01(\x0e2\r.rpc.LanguageR\blanguage\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x02 \x01(\x03R\tproblemId\x12\x10\n" +
	"\x03uid\x18\x03 \x01(\x03R\x03uid\x12\x12\n" +
	"\x04code\x18\x04 \x01(\tR\x04code\x12#\n" +
	"\rfull_template\x18\x05 \x01(\tR\ffullTemplate\x12'\n" +
	"\x0ftype_definition\x18\x06 \x01(\tR\x0etypeDefinition\x12\x14\n" +
	"\x05input\x18\a \x03(\tR\x05input\x12\x16\n" +
	"\x06output\x18\b \x03(\tR\x06output\x12\x17\n" +
	"\amax_mem\x18\t \x01(\tR\x06maxMem\x12\x19\n" +
	"\bmax_time\x18\n" +
	" \x01(\tR\amaxTime\"6\n" +
	"\rJudgeResponse\x12%\n" +
	"\aresults\x18\x01 \x03(\v2\v.rpc.ResultR\aresults\"\xaa\x01\n" +
	"\x06Result\x12#\n" +
	"\x06status\x18\x01 \x01(\x0e2\v.rpc.StatusR\x06status\x12\x1a\n" +
	"\bTimeUsed\x18\x02 \x01(\x03R\bTimeUsed\x12\x1e\n" +
	"\n" +
	"MemoryUsed\x18\x03 \x01(\x03R\n" +
	"MemoryUsed\x12\x16\n" +
	"\x06output\x18\x04 \x01(\tR\x06output\x12'\n" +
	"\x0fexpected_output\x18\x05 \x01(\tR\x0eexpectedOutput*1\n" +
	"\bLanguage\x12\x06\n" +
	"\x02go\x10\x00\x12\b\n" +
	"\x04java\x10\x01\x12\a\n" +
	"\x03cpp\x10\x02\x12\n" +
	"\n" +
	"\x06python\x10\x03*\xb0\x01\n" +
	"\x06Status\x12\x13\n" +
	"\x0fstatus_accepted\x10\x00\x12\x17\n" +
	"\x13status_wrong_answer\x10\x01\x12\x1e\n" +
	"\x1astatus_time_limit_exceeded\x10\x02\x12 \n" +
	"\x1cstatus_memory_limit_exceeded\x10\x03\x12\x18\n" +
	"\x14status_runtime_error\x10\x04\x12\x1c\n" +
	"\x18status_compilation_error\x10\x052>\n" +
	"\fJudgeService\x12.\n" +
	"\x05Judge\x12\x11.rpc.JudgeRequest\x1a\x12.rpc.JudgeResponse2=\n" +
	"\rRunnerService\x12,\n" +
	"\x03Run\x12\x11.rpc.JudgeRequest\x1a\x12.rpc.JudgeResponseB\x06Z\x04/rpcb\x06proto3"

var (
	file_pkg_rpc_proto_judge_proto_rawDescOnce sync.Once
	file_pkg_rpc_proto_judge_proto_rawDescData []byte
)

func file_pkg_rpc_proto_judge_proto_rawDescGZIP() []byte {
	file_pkg_rpc_proto_judge_proto_rawDescOnce.Do(func() {
		file_pkg_rpc_proto_judge_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_rpc_proto_judge_proto_rawDesc), len(file_pkg_rpc_proto_judge_proto_rawDesc)))
	})
	return file_pkg_rpc_proto_judge_proto_rawDescData
}

var file_pkg_rpc_proto_judge_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pkg_rpc_proto_judge_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_rpc_proto_judge_proto_goTypes = []any{
	(Language)(0),         // 0: rpc.Language
	(Status)(0),           // 1: rpc.Status
	(*JudgeRequest)(nil),  // 2: rpc.JudgeRequest
	(*JudgeResponse)(nil), // 3: rpc.JudgeResponse
	(*Result)(nil),        // 4: rpc.Result
}
var file_pkg_rpc_proto_judge_proto_depIdxs = []int32{
	0, // 0: rpc.JudgeRequest.language:type_name -> rpc.Language
	4, // 1: rpc.JudgeResponse.results:type_name -> rpc.Result
	1, // 2: rpc.Result.status:type_name -> rpc.Status
	2, // 3: rpc.JudgeService.Judge:input_type -> rpc.JudgeRequest
	2, // 4: rpc.RunnerService.Run:input_type -> rpc.JudgeRequest
	3, // 5: rpc.JudgeService.Judge:output_type -> rpc.JudgeResponse
	3, // 6: rpc.RunnerService.Run:output_type -> rpc.JudgeResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_rpc_proto_judge_proto_init() }
func file_pkg_rpc_proto_judge_proto_init() {
	if File_pkg_rpc_proto_judge_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_rpc_proto_judge_proto_rawDesc), len(file_pkg_rpc_proto_judge_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_pkg_rpc_proto_judge_proto_goTypes,
		DependencyIndexes: file_pkg_rpc_proto_judge_proto_depIdxs,
		EnumInfos:         file_pkg_rpc_proto_judge_proto_enumTypes,
		MessageInfos:      file_pkg_rpc_proto_judge_proto_msgTypes,
	}.Build()
	File_pkg_rpc_proto_judge_proto = out.File
	file_pkg_rpc_proto_judge_proto_goTypes = nil
	file_pkg_rpc_proto_judge_proto_depIdxs = nil
}
